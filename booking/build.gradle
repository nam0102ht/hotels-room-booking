plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.avast.gradle.docker-compose" version "0.16.12"
    id "org.springdoc.openapi-gradle-plugin" version "1.6.0"
    id 'application'
    id 'jacoco'
}

group = 'com.ntnn.service'
version = '1.0-SNAPSHOT'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.3"
    }
}


repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.2'
    implementation 'org.postgresql:postgresql:42.6.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.1'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

openApi {
    apiDocsUrl.set("http://localhost:8080/catalog-routing/v3/api-docs")
    outputDir.set(file("$buildDir/generated/docs"))
    outputFileName.set("api-definition.yml")
    waitTimeInSeconds.set(30)
}

task componentTest(type: Test, dependsOn: ['testClasses']) {
    useJUnitPlatform()
    include 'component/**'
}

dockerCompose {
    useComposeFiles = ["src/main/docker/docker-compose-dev.yml"]
    dockerComposeStopTimeout = java.time.Duration.ofSeconds(120)
}

task startTestEnvironment() {
    dependsOn += ["composeUp"]
}

task stopTestEnvironment {
    dependsOn += ["composeDown"]
}